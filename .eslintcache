[{"/home/dev/dev/projects/quotes/src/index.js":"1","/home/dev/dev/projects/quotes/src/App.js":"2","/home/dev/dev/projects/quotes/src/components/Quotes.jsx":"3","/home/dev/dev/projects/quotes/src/components/Header.jsx":"4","/home/dev/dev/projects/quotes/src/quotes-data.js":"5"},{"size":197,"mtime":1609604550430,"results":"6","hashOfConfig":"7"},{"size":238,"mtime":1610648655415,"results":"8","hashOfConfig":"7"},{"size":2454,"mtime":1610827293473,"results":"9","hashOfConfig":"7"},{"size":156,"mtime":1609629421163,"results":"10","hashOfConfig":"7"},{"size":991,"mtime":1609679419778,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1m5fs2k",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/dev/dev/projects/quotes/src/index.js",[],["25","26"],"/home/dev/dev/projects/quotes/src/App.js",[],"/home/dev/dev/projects/quotes/src/components/Quotes.jsx",["27"],"import React, { useState, useEffect } from 'react';\nimport quotes from '../quotes-data.js';\n// import '../style/style-default.css';\n\nexport default function Quotes() {\n    let randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n    const [qoute, setQoute] = useState(\"\");\n    const [styleBtn, setStyleBtn] = useState(\"\");\n    const [stylePath, setStylePath] = useState(\"\");\n\n    let firstStyle = (e) => {\n        let targetClass = e.target.className\n        setStyleBtn(targetClass)\n        setStylePath(require('../style/style-one.css'));\n    }\n\n    let secondStyle = (e) => {\n        let targetClass = e.target.className\n        setStyleBtn(targetClass)\n        setStylePath(require('../style/style-two.css'));\n    }\n\n    let defaultStyle = (e) => {\n        let targetClass = e.target.className\n        setStyleBtn(targetClass)\n        setStylePath(require('../style/style-default.css'));\n    }\n\n    // let changeStyle = (e) => {\n    //     let targetClass = e.target.className\n    //     setStyleBtn(targetClass)\n    // }\n\n    useEffect(() => {\n        console.log(\"btn:\", styleBtn)\n        if (styleBtn.includes(\"style-one\")) {\n            // firstStyle()\n            setStylePath(require('../style/style-one.css'));\n        }\n        else if (styleBtn.includes(\"style-two\")) {\n            // secondStyle()\n            setStylePath(require('../style/style-two.css'));\n        }\n        else {\n            console.log(\"else\")\n            // defaultStyle()\n            setStylePath(require('../style/style-default.css'));\n        }\n    }, [stylePath])\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"quote-section\">\n                    <blockquote>\n                        <q>\n                            {!qoute ? randomQuote : qoute}\n                        </q>\n                    </blockquote>\n                </div>\n                <button className=\"btn-new\" onClick={() => setQoute(randomQuote)}>\n                    get new one\n                </button>\n                <div className=\"style-btn-container\">\n                    <button className=\"style-btn style-one\" onClick={firstStyle}>style one</button>\n                    <button className=\"style-btn style-two\" onClick={secondStyle}>style two</button>\n                    <button className=\"style-btn style-default\" onClick={defaultStyle}>default style</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","/home/dev/dev/projects/quotes/src/components/Header.jsx",[],"/home/dev/dev/projects/quotes/src/quotes-data.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":49,"column":8,"nodeType":"36","endLine":49,"endColumn":19,"suggestions":"37"},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'styleBtn'. Either include it or remove the dependency array.","ArrayExpression",["42"],["40"],["41"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [styleBtn, stylePath]",{"range":"45","text":"46"},[1554,1565],"[styleBtn, stylePath]"]