[{"/home/dev/dev/projects/quotes/src/index.js":"1","/home/dev/dev/projects/quotes/src/App.js":"2","/home/dev/dev/projects/quotes/src/components/Header.jsx":"3","/home/dev/dev/projects/quotes/src/components/Quotes.jsx":"4","/home/dev/dev/projects/quotes/src/quotes-data.js":"5"},{"size":197,"mtime":1609604550430,"results":"6","hashOfConfig":"7"},{"size":238,"mtime":1631786671664,"results":"8","hashOfConfig":"7"},{"size":412,"mtime":1631729510577,"results":"9","hashOfConfig":"7"},{"size":1615,"mtime":1631808840140,"results":"10","hashOfConfig":"7"},{"size":991,"mtime":1609679419778,"results":"11","hashOfConfig":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"goxdfu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1fg5suu","/home/dev/dev/projects/quotes/src/index.js",[],["26","27"],"/home/dev/dev/projects/quotes/src/App.js",[],"/home/dev/dev/projects/quotes/src/components/Header.jsx",[],"/home/dev/dev/projects/quotes/src/components/Quotes.jsx",["28"],"import React, { useState, useEffect } from 'react';\n// import quotes from '../quotes-data.js';\nimport btnDeco from \"../assets/deco-btn.png\"\n\nexport default function Quotes() {\n    const [quotes, setQuotes] = useState([]);\n    const [anotherQuote, setAnotherQuote] = useState(\"\");\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    const fetchData = () => {\n        fetch(\"https://type.fit/api/quotes\")\n            .then(res => res.json())\n            .then(data => {\n                setQuotes(data)\n            })\n    }\n\n    const quoteResult = quotes.map((quote, index) => {\n        return <div key={quote.index}>\n            <p>\n                {quote.text}\n            </p>\n            <p className=\"author\">\n                {quote.author}\n            </p>\n        </div>\n    })\n\n    let randomQuote = quoteResult[Math.floor(Math.random() * quoteResult.length)];\n\n    let getAnotherQuote = () => {\n        setAnotherQuote(quoteResult[Math.floor(Math.random() * quoteResult.length)])\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"quote-section\">\n                    <blockquote>\n                        <i class=\"fas fa-quote-left quote-icon quote-icon-one\"></i>\n                        {randomQuote}\n                        <i class=\"fas fa-quote-right quote-icon quote-icon-two\"></i>\n                    </blockquote>\n                </div>\n                <button className=\"btn-new\" onClick={() => getAnotherQuote()}>\n                    <img src={btnDeco} alt=\"\" width=\"200\" />\n                </button>\n            </div>\n        </>\n    )\n}\n","/home/dev/dev/projects/quotes/src/quotes-data.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":7,"column":12,"nodeType":"37","messageId":"38","endLine":7,"endColumn":24},{"ruleId":"31","replacedBy":"39"},{"ruleId":"33","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'anotherQuote' is assigned a value but never used.","Identifier","unusedVar",["41"],["42"],"no-global-assign","no-unsafe-negation"]